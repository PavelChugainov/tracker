"""some niasdf

Revision ID: 7abb9053870b
Revises:
Create Date: 2025-09-29 22:43:42.734838

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "7abb9053870b"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "camp",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("rating", sa.Float(), nullable=False),
        sa.Column("price", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=30), nullable=False),
        sa.Column("last_name", sa.String(length=50), nullable=True),
        sa.Column("username", sa.String(length=20), nullable=False),
        sa.Column("phone_number", sa.String(length=20), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("phone_number"),
        sa.UniqueConstraint("username"),
    )
    op.create_table(
        "commentary",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("text", sa.String(length=200), nullable=False),
        sa.Column("author_id", sa.Integer(), nullable=False),
        sa.Column("date", sa.DATE(), nullable=False),
        sa.ForeignKeyConstraint(
            ["author_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "review",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("rating", sa.Integer(), nullable=False),
        sa.Column("camp_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["camp_id"],
            ["camp.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.add_column(
        "address",
        sa.Column("coordinate", sa.String(length=50), nullable=False),
    )
    op.add_column(
        "address", sa.Column("camp_id", sa.Integer(), nullable=False)
    )
    op.add_column("address", sa.Column("distance", sa.Float(), nullable=False))
    op.create_foreign_key(None, "address", "camp", ["camp_id"], ["id"])
    op.drop_column("address", "user_id")
    op.drop_column("address", "email_address")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "address",
        sa.Column(
            "email_address", sa.VARCHAR(), autoincrement=False, nullable=False
        ),
    )
    op.add_column(
        "address",
        sa.Column(
            "user_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
    )
    op.drop_constraint(None, "address", type_="foreignkey")
    op.drop_column("address", "distance")
    op.drop_column("address", "camp_id")
    op.drop_column("address", "coordinate")
    op.drop_table("review")
    op.drop_table("commentary")
    op.drop_table("user")
    op.drop_table("camp")
    # ### end Alembic commands ###
